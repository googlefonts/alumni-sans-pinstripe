<?xml version='1.0' encoding='UTF-8'?>
<glyph name="R" format="2">
  <advance width="411"/>
  <unicode hex="0052"/>
  <note>
R
</note>
  <anchor x="187" y="0" name="bottom"/>
  <anchor x="254" y="591" name="top"/>
  <outline>
    <contour>
      <point x="41" y="0" type="line"/>
      <point x="57" y="0" type="line"/>
      <point x="98" y="287" type="line"/>
      <point x="209" y="287" type="line" smooth="yes"/>
      <point x="258" y="287"/>
      <point x="279" y="252"/>
      <point x="288" y="200" type="curve" smooth="yes"/>
      <point x="320" y="0" type="line"/>
      <point x="337" y="0" type="line"/>
      <point x="300" y="224" type="line" smooth="yes"/>
      <point x="294" y="256"/>
      <point x="275" y="288"/>
      <point x="254" y="291" type="curve"/>
      <point x="304" y="297"/>
      <point x="360" y="328"/>
      <point x="371" y="411" type="curve" smooth="yes"/>
      <point x="383" y="494" type="line" smooth="yes"/>
      <point x="384" y="501"/>
      <point x="384" y="507"/>
      <point x="384" y="513" type="curve" smooth="yes"/>
      <point x="384" y="570"/>
      <point x="343" y="591"/>
      <point x="291" y="591" type="curve" smooth="yes"/>
      <point x="125" y="591" type="line"/>
    </contour>
    <contour>
      <point x="221" y="303" type="curve" smooth="yes"/>
      <point x="100" y="303" type="line"/>
      <point x="138" y="575" type="line"/>
      <point x="292" y="575" type="line" smooth="yes"/>
      <point x="333" y="575"/>
      <point x="367" y="553"/>
      <point x="367" y="506" type="curve" smooth="yes"/>
      <point x="367" y="501"/>
      <point x="367" y="496"/>
      <point x="366" y="491" type="curve" smooth="yes"/>
      <point x="355" y="409" type="line" smooth="yes"/>
      <point x="344" y="331"/>
      <point x="289" y="303"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
19 5 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
15 1 18 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
25 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */</string>
      <key>com.schriftgestaltung.Glyphs.glyph.leftMetricsKey</key>
      <string>H</string>
    </dict>
  </lib>
</glyph>
